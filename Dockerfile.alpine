FROM twdps/circleci-base-image:alpine-stable

LABEL org.opencontainers.image.created="%%CREATED%%" \
      org.opencontainers.image.authors="nic.cheneweth@thoughtworks.com" \
      org.opencontainers.image.documentation="https://github.com/twplatformlabs/circleci-kube-ops" \
      org.opencontainers.image.source="https://github.com/twplatformlabs/circleci-kube-ops" \
      org.opencontainers.image.url="https://github.com/twplatformlabs/circleci-kube-ops" \
      org.opencontainers.image.version="%%VERSION%%" \
      org.opencontainers.image.vendor="ThoughtWorks, Inc." \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.title="circleci-kube-ops" \
      org.opencontainers.image.description="Alpine-based CircleCI executor image containing k9s admin packages" \
      org.opencontainers.image.base.name="%%BASE%%"

# awscli has to be pinned because the checkov package does not support more recent versions
ENV AWSCLI_VERSION=1.36.17

SHELL ["/bin/ash", "-o", "pipefail", "-c"]

# Configured for automatic, monthly build using current package repository release versions.
# Pin downstream executor builds to specific OS and package versions using YYYY.MM tag.
# hadolint ignore=DL3004
RUN sudo apk add --no-cache \
             nodejs-current \
             npm \
             ruby \
             ruby-dev \
             ruby-webrick \
             ruby-bundler \
             python3 \
             python3-dev \
             py3-pip \
             libffi-dev && \
    sudo npm install -g bats && \
    sudo gem install --no-document \
             awspec \
             nokogiri \
             json && \
    sudo rm /usr/lib/python*/EXTERNALLY-MANAGED && \
    if [ ! -e /usr/bin/pip ]; then sudo ln -s /usr/bin/pip3 /usr/bin/pip ; fi && \
    sudo ln -s /usr/bin/pydoc3 /usr/bin/pydoc && \
    sudo pip install \
             checkov \
             awscli=="${AWSCLI_VERSION}" && \
    download_url=$(curl -s "https://api.github.com/repos/kubernetes-sigs/kind/releases/latest" | jq -r ".assets[] | select(.name == \"kind-linux-amd64\") | .browser_download_url") && \
    curl -Lo ./kind "${download_url}" && \
    sudo chmod +x ./kind && \
    sudo mv ./kind /usr/local/bin/kind && \
    sudo bash -c "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" && \
    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && rm kubectl && \
    current_version=$(curl -s https://api.github.com/repos/istio/istio/releases/latest | jq -r '.tag_name') && \
    curl -L https://istio.io/downloadIstio | ISTIO_VERSION="${current_version}" sh - && \
    sudo cp "istio-${current_version}/bin/istioctl" /usr/local/bin/istioctl && \
    rm -rf "istio-${current_version}" && \
    sudo apk add --no-cache openssl && \
    sudo bash -c "curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash" && \
    curl -o px https://storage.googleapis.com/pixie-dev-public/cli/latest/cli_linux_amd64 && \
    chmod +x px && sudo mv px /usr/local/bin/px && \
    curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 && \
    sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd && \
    rm argocd-linux-amd64 && \
    sudo bash -c "curl -s https://fluxcd.io/install.sh | bash" && \
    download_url=$(curl -s "https://api.github.com/repos/twplatformlabs/circlepipe/releases/latest" | jq -r ".assets[] | select(.name == \"circlepipe_Linux_amd64.tar.gz\") | .browser_download_url") && \
    curl -LO "${download_url}" && \
    mkdir ./circlepipe && tar -xzf circlepipe_Linux_amd64.tar.gz -C ./circlepipe && \
    sudo mv ./circlepipe/circlepipe /usr/local/bin/circlepipe && \
    sudo rm -rf ./circlepipe circlepipe_Linux_amd64.tar.gz && \
    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

USER circleci

WORKDIR /home/circleci/project
